{"id":1574,"date":"2022-03-24T13:58:27","date_gmt":"2022-03-24T17:58:27","guid":{"rendered":"https:\/\/learn.codethedream.org\/?page_id=1574"},"modified":"2022-03-24T13:58:27","modified_gmt":"2022-03-24T17:58:27","slug":"git-process-for-code-the-dream-practicums","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/git-process-for-code-the-dream-practicums\/","title":{"rendered":"Git Process for Code the Dream Practicums"},"content":{"rendered":"\n<p>In a practicum, a team of developers shares access to a single Git repository.  This can create problems.  Several team members may change a given piece of code, with the result that conflicting changes are introduced.  The links below describe processes that minimize the potential for conflict and that provide a way to resolve code conflicts if they occur.<\/p>\n\n\n\n<p>There are two such processes, but the flow is similar in both.  <\/p>\n\n\n\n<p>Most practicums use the <strong>open source process.<\/strong>  In this process, each team member has a fork of the code.  The local git repository on each team member&#8217;s machine is connected to two remote repositories, typically named origin and upstream.  Most team members only have read access to the upstream repository.  The origin repository is that team member&#8217;s fork of the upstream repository.  One or several reviewer\/committers has write access to the upstream repostory.  A triangular flow is created, where team members pull from the upstream repository, push feature branches to their origin repository, and create pull requests from their feature branches of the origin repository to the main branch of the upstream repository.  A reviewer\/committer then reviews the pull requests, and when one is approved, merges it with the main branch of the upstream repository.<\/p>\n\n\n\n<p>Some practicums and most Code the Dream internal projects use the <strong>closed source process<\/strong>.  This process is used when we don&#8217;t want the code to be publicly available.  There are no forks of the code.  Instead, there is only one remote repository that resides on the Code the Dream or the Code the Dream Students github account.  Team members are given read\/write access to this repository, except for the main branch, for which they have read\/only access.  Only reviewer\/committers can write to the main branch.  A triangular workflow is created where team members pull from the main branch, push feature branches, and create pull requests from their feature branches to the main branch.  A reviewer\/committer then reviews the pull requests, and when one is approvide, merges it with the main branch.<\/p>\n\n\n\n<p>Ideally, one would not have several team members working on the same files at the same time.  But this is not always possible.  When several team members make changes to the same file, a <strong>merge conflict<\/strong> can occur.  A pull request from the first of these team members may be merged into the main branch, but a pull request from another team member will show the merge conflict.  That team member must then resolve the merge conflict before their pull request can be approved.<\/p>\n\n\n\n<p>The open source process is described <strong><a href=\"https:\/\/learn.codethedream.org\/open-source-git-process\/\" target=\"_blank\" rel=\"noreferrer noopener\">here.<\/a><\/strong><\/p>\n\n\n\n<p>The closed source process is described <strong><a href=\"https:\/\/learn.codethedream.org\/git-process-for-closed-source-projects\/\" target=\"_blank\" rel=\"noreferrer noopener\">here.<\/a><\/strong><\/p>\n\n\n\n<p>A video explaining how to resolve merge conflicts is available <strong><a href=\"https:\/\/youtu.be\/C9BIh78xYAI\" target=\"_blank\" rel=\"noreferrer noopener\">here<\/a><\/strong>.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>In a practicum, a team of developers shares access to a single Git repository. This can create problems. Several team members may change a given piece of code, with the result that conflicting changes are introduced. The links below describe processes that minimize the potential for conflict and that provide a way to resolve code<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/1574"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=1574"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/1574\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=1574"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}